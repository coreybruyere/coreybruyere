# {{ ansible_managed }}

server {
  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) %}
  listen 443 ssl spdy;
  {% else -%}
  listen 80;
  {% endif %}

  server_name  {% for host in item.value.site_hosts %} {{ host }} {% if item.value.multisite.subdomains %} *.{{ host }} {% endif %} {% endfor %};
  access_log   {{ www_root }}/{{ item.key }}/logs/access.log;
  error_log    {{ www_root }}/{{ item.key }}/logs/error.log;

  root  {{ www_root }}/{{ item.key }}/current/web;
  index index.php index.htm index.html;

  charset utf-8;

  {% if item.value.env.wp_env == 'development' -%}
  # See Virtualbox section at http://wiki.nginx.org/Pitfalls
  sendfile off;
  {%- endif %}

  {% if item.value.multisite.enabled | default(false) -%}
    {% if item.value.multisite.subdomains | default(false) -%}
      rewrite ^/(wp-.*.php)$ /wp/$1 last;
      rewrite ^/(wp-(content|admin|includes).*) /wp/$1 last;
    {%- else -%}
      include wordpress_multisite_subdirectories.conf;
    {%- endif %}
  {%- endif %}

  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Xss-Protection "1; mode=block" always;

  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) %}
  include ssl.conf;
  include ssl-stapling.conf;

  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  {% if item.value.ssl.cert is defined and item.value.ssl.key is defined %}
  ssl_certificate         /etc/nginx/ssl/{{ item.value.ssl.cert | basename }};
  ssl_trusted_certificate /etc/nginx/ssl/{{ item.value.ssl.cert | basename }};
  ssl_certificate_key     /etc/nginx/ssl/{{ item.value.ssl.key | basename }};
  {% else %}
  ssl_certificate         /etc/nginx/ssl/{{ item.key }}_self_signed.pem;
  ssl_trusted_certificate /etc/nginx/ssl/{{ item.key }}_self_signed.pem;
  ssl_certificate_key     /etc/nginx/ssl/{{ item.key }}_self_signed.key;
  {% endif %}
  {% endif %}

  include includes.d/{{ item.key }}/*.conf;
  include wordpress.conf;

  location ~ \.php$ {
    try_files $uri =404;
    {% if item.value.cache is defined and item.value.cache.enabled | default(false) -%}
    add_header Fastcgi-Cache $upstream_cache_status;
    set $skip_cache 0;

    if ($query_string != "") {
      set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "{{ item.value.cache.skip_cache_uri | default(nginx_skip_cache_uri) }}") {
      set $skip_cache 1;
    }

    # Don't use the cache if cookies includes the following
    if ($http_cookie ~* "{{ item.value.cache.skip_cache_cookie | default(nginx_skip_cache_cookie) }}") {
      set $skip_cache 1;
    }

    fastcgi_cache wordpress;
    fastcgi_cache_valid {{ item.value.cache.duration | default(nginx_cache_duration) }};
    fastcgi_cache_bypass $skip_cache;
    fastcgi_no_cache $skip_cache;
    {% endif -%}
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    {% if hhvm -%}
    fastcgi_pass unix:/var/run/hhvm/hhvm.sock;
    {% else -%}
    fastcgi_pass unix:/var/run/php5-fpm-wordpress.sock;
    {% endif -%}
  }
}

{% if item.value.ssl is defined and item.value.ssl.enabled | default(False) %}
server {
  listen 80;
  server_name {{ item.value.site_hosts | join(' ') }};
  return 301 https://$host$request_uri;
}
{% endif %}

{% for host in item.value.site_hosts if strip_www %}
server {
  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}
    listen 443 ssl spdy;
  {% else -%}
    listen 80;
  {% endif -%}
    server_name www.{{ host }};
    return 301 $scheme://{{ host }}$request_uri;
}
{% endfor %}
